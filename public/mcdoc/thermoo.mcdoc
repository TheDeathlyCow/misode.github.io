use ::java::data::worldgen::biome::Precipitation

dispatch minecraft:resource[thermoo:environment_provider] to struct EnvironmentProvider {
	type: #[id] Type,
	...thermoo:environment_provider_type[[type]],
}

type EnvironmentProviderOrReference = (
	#[id="thermoo:environment_provider"] string |
	EnvironmentProvider
)

enum(string) Type {
	Constant = "thermoo:constant",
	TemperateSeasonal = "thermoo:seasonal/temperate",
	TropicalSeasonal = "thermoo:seasonal/tropical",
	LightThreshold = "thermoo:light_threshold",
	WeatherState = "thermoo:weather_state",
	PrecipitationType = "thermoo:precipitation_type",
	TemperatureShift = "thermoo:temperature_shift",
	Modify = "thermoo:modify",
}

enum(string) EnvironmentComponentType {
	Temperature = "thermoo:temperature",
	RelativeHumidity = "thermoo:relative_humidity"
}

struct EnvironmentComponentMap {
	[EnvironmentComponentType]: thermoo:environment_component[[%key]],
}

enum(string) TemperatureUnit {
	Celsius = "celsius",
	Kelvin = "kelvin",
	Fahrenheit = "fahrenheit",
	Rankine = "rankine",
}

type TemperatureRecord = (
	double |
	struct {
		value: double,
		unit: TemperatureUnit,
	}
)

dispatch thermoo:environment_component[thermoo:temperature] to TemperatureRecord

dispatch thermoo:environment_component[thermoo:relative_humidity] to double @ 0..1

dispatch thermoo:environment_provider_type[thermoo:constant] to struct {
	components: EnvironmentComponentMap,
}

dispatch thermoo:environment_provider_type[thermoo:seasonal/temperate] to struct {
	seasons: struct {
		wet?: EnvironmentProviderOrReference,
		dry?: EnvironmentProviderOrReference,
	},
	fallback_season?: ("spring" | "summer" | "autumn" | "winter"),
}

dispatch thermoo:environment_provider_type[thermoo:seasonal/tropical] to struct { 
	seasons: struct {
		spring?: EnvironmentProviderOrReference,
		summer?: EnvironmentProviderOrReference,
		autumn?: EnvironmentProviderOrReference,
		winter?: EnvironmentProviderOrReference,
	},
	fallback_season?: ("wet" | "dry"),
}

dispatch thermoo:environment_provider_type[thermoo:light_threshold] to struct {
	light_type?: ("block" | "sky"),
	apply_ambient_darkness?: boolean,
	threshold: int @ 0..15,
	above: EnvironmentProviderOrReference,
	below: EnvironmentProviderOrReference,
}

dispatch thermoo:environment_provider_type[thermoo:weather_state] to struct {
	clear?: EnvironmentProviderOrReference,
	rain?: EnvironmentProviderOrReference,
	thunder?: EnvironmentProviderOrReference,
}

dispatch thermoo:environment_provider_type[thermoo:precipitation_type] to struct {
	precipitation_type: struct {
		[Precipitation]?: EnvironmentProviderOrReference,
	}
}

dispatch thermoo:environment_provider_type[thermoo:temperature_shift] to struct {
	shift: TemperatureRecord
}

dispatch thermoo:environment_provider_type[thermoo:modify] to struct {
	modifiers: (
		[#[id(registry="thermoo:environment_provider")] string] @ 1.. |
		#[id(registry="thermoo:environment_provider",tags="allowed")] string |
	)
}
