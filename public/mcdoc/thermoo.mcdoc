dispatch minecraft:resource[thermoo:environment_provider] to struct EnvironmentProvider {
	type: #[id] Type,
	...thermoo:environment_provider_type[[type]],
}

type EnvironmentProviderOrReference = (
	#[id="thermoo:environment_provider"] string |
	EnvironmentProvider
)

enum(string) Type {
	Constant = "thermoo:constant",
	TemperateSeasonal = "thermoo:seasonal/temperate",
	TropicalSeasonal = "thermoo:seasonal/tropical",
	LightThreshold = "thermoo:light_threshold",
	WeatherState = "thermoo:weather_state",
	PrecipitationType = "thermoo:precipitation_type",
	TemperatureShift = "thermoo:temperature_shift",
	Modify = "thermoo:modify",
}

struct EnvironmentComponentMap {
	[#[id="thermoo:environment_component_type"] string]: thermoo:environment_component[[%key]],
}

dispatch thermoo:environment_component[thermoo:temperature] to (
	double |
	struct TemperatureRecord {
		value: double,
		unit: TemperatureUnit,
	}
)

dispatch thermoo:environment_component[thermoo:relative_humidity] to double

enum(string) TemperatureUnit {
	Celsius = "Celsius",
	Kelvin = "Kelvin",
	Fahrenheit = "Fahrenheit",
	Rankine = "Rankine",
}

/// unsure how to make this autocomplete properly
dispatch thermoo:environment_provider_type[thermoo:constant] to struct {
	components: EnvironmentComponentMap,
}

struct TemperateSeasonsMap {
	spring?: EnvironmentProviderOrReference,
	summer?: EnvironmentProviderOrReference,
	autumn?: EnvironmentProviderOrReference,
	winter?: EnvironmentProviderOrReference,
}

struct TropicalSeasonsMap {
	wet?: EnvironmentProviderOrReference,
	dry?: EnvironmentProviderOrReference,
}

/// seasons must contain at least one entry, and fallback_season, if specified, must be a key of seasons, but I'm not sure if these requirements can be 
/// enforced here
dispatch thermoo:environment_provider_type[thermoo:seasonal/temperate] to struct {
	seasons: TemperateSeasonsMap,
	fallback_season?: ("spring" | "summer" | "autumn" | "winter"),
}

dispatch thermoo:environment_provider_type[thermoo:seasonal/tropical] to struct { 
	seasons: TemperateSeasonsMap,
	fallback_season?: ("wet" | "dry"),
}

dispatch thermoo:environment_provider_type[thermoo:light_threshold] to struct {
	light_type?: ("block" | "sky"),
	apply_ambient_darkness?: boolean,
	threshold: int @ 0..15,
	above: EnvironmentProviderOrReference,
	below: EnvironmentProviderOrReference
}
